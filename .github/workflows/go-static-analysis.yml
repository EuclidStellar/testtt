name: Static Analysis

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened , edited]
    paths:
      - '**.go'
      - '**.js'
      - '**.jsx'
      - '.github/workflows/go-static-analysis.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true


jobs:
  lint_and_fix_go:
    name: Go Static Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        working-directory:
          - code
          - echo-mysql
          - echo-sql
          - fasthttp-postgres
          - gin-mongo
          - gin-redis
          - go-grpc
          - go-jwt
          - go-twilio
          - graphql-sql
          - http-pokeapi
          - mux-elasticsearch
          - mux-mysql
          - mux-sql
          - S3-Keploy
          - sse-svelte
          - users-profile
          - book-store-inventory

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Ensure Go module exists and tidy
        run: |
          if [ ! -f go.mod ]; then
            go mod init github.com/${{ github.repository }}
          fi
          go mod tidy
        working-directory: ./${{ matrix.working-directory }}

      - name: Run lint and report issues
        uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          workdir: ./${{ matrix.working-directory }}
          fail_level: warning
          
      - name: Upload golangci-lint summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: golangci-lint-summary-${{ matrix.working-directory }}
          path: ./${{ matrix.working-directory }}

      - name: Summarize lint results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            core.summary.addRaw("## Go Static Analysis Run in ${{ matrix.working-directory }}\n")

  lint_js:
    name: JavaScript Static Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        working-directory:
          - js-code
          # Add more JS/TS project directories here, e.g.:
          # - frontend
          # - webapp
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Ensure package.json and eslint.config.mjs exist
        run: |
          if [ ! -f package.json ]; then
            npm init -y
            npm install eslint --save-dev
          fi
          if [ ! -f eslint.config.mjs ]; then
            echo "export default [{ rules: { semi: 'error', quotes: ['error', 'single'] } }];" > eslint.config.mjs
            echo "Created minimal eslint.config.mjs in ${{ matrix.working-directory }}"
          else
            echo "eslint.config.mjs already exists in ${{ matrix.working-directory }}"
          fi
        working-directory: ./${{ matrix.working-directory }}

      - name: Run ESLint via reviewdog (PR review)
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          #eslint_flags: '**/*.{js,jsx,ts,tsx} --no-error-on-unmatched-pattern'
          eslint_flags: '--config eslint.config.mjs **/*.{js,jsx,ts,tsx} --no-error-on-unmatched-pattern'
          fail_level: error
          workdir: ./${{ matrix.working-directory }}