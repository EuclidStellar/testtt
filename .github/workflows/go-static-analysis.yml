name: Go Static Analysis

on:
  pull_request:
    branches: [ main ]
    paths:
      - '**.go'

jobs:
  lint:
    name: Static Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20' # Ensure this Go version is compatible with your chosen golangci-lint version
          
      - name: Initialize Go module in ./code
        run: |
          go mod init github.com/euclidstellar/testtt
          go mod tidy
        working-directory: ./code
          
      # REMOVE the manual installation step for golangci-lint:
      # - name: Install golangci-lint
      #   run: |
      #     curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.53.3
          
      - name: Run lint and report issues
        uses: reviewdog/action-golangci-lint@v2
        continue-on-error: true # Ensures subsequent auto-fixing steps run even if linters find issues
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          fail_level: error # Configures reviewdog's reporting level
          golangci_lint_version: v1.53.3 # Explicitly tell the action which version of golangci-lint to use
          workdir: ./code # Specify the working directory for golangci-lint
          # Ensure your .golangci.yml is compatible with this version
          
      - name: Run gofmt to fix formatting issues
        run: go fmt ./...
        working-directory: ./code # Run gofmt within the code directory
          
      - name: Run goimports to fix imports
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          goimports -w $(find . -type f -name '*.go' | grep -v /vendor/)
        working-directory: ./code # Run goimports within the code directory
          
      - name: Commit and push changes if any
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add -A
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto-fix code formatting and style issues"
            git push
          fi